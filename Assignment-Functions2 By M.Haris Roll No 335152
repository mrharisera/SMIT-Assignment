{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNzs0q9wBfRJYZJdM4UARiO"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Task1:\n","You need to write a function in python that return all such numbers which are  divisible by 7 but are not a multiple of 5, between 2000 and 3200 (both included).  Return the obtained numbers in a comma-separated sequence on a single line.  "],"metadata":{"id":"5KzDECj04-F5"}},{"cell_type":"code","source":["def find_numbers():\n","    numbers = [str(i) for i in range(2000, 3201) if i % 7 == 0 and i % 5 != 0]\n","    return \",\".join(numbers)\n","\n","# Output\n","result = find_numbers()\n","print(result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QPfJaC0q5h4u","executionInfo":{"status":"ok","timestamp":1735115604471,"user_tz":-300,"elapsed":385,"user":{"displayName":"Mr Haris Freelancer","userId":"14924098609705501068"}},"outputId":"5d6b0511-721e-4cc6-a795-2e170783d688"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["2002,2009,2016,2023,2037,2044,2051,2058,2072,2079,2086,2093,2107,2114,2121,2128,2142,2149,2156,2163,2177,2184,2191,2198,2212,2219,2226,2233,2247,2254,2261,2268,2282,2289,2296,2303,2317,2324,2331,2338,2352,2359,2366,2373,2387,2394,2401,2408,2422,2429,2436,2443,2457,2464,2471,2478,2492,2499,2506,2513,2527,2534,2541,2548,2562,2569,2576,2583,2597,2604,2611,2618,2632,2639,2646,2653,2667,2674,2681,2688,2702,2709,2716,2723,2737,2744,2751,2758,2772,2779,2786,2793,2807,2814,2821,2828,2842,2849,2856,2863,2877,2884,2891,2898,2912,2919,2926,2933,2947,2954,2961,2968,2982,2989,2996,3003,3017,3024,3031,3038,3052,3059,3066,3073,3087,3094,3101,3108,3122,3129,3136,3143,3157,3164,3171,3178,3192,3199\n"]}]},{"cell_type":"markdown","source":["Task2: You need code a function that calculates and returns the value according to the  given formula:  \n","P = Square root of [(2 * A * B)/C]  \n","Following are the fixed values of A and B:  \n","A is 50. B is 30.  \n","The values of the literal C should be taken as console input to your program in a  comma-separated sequence.  \n","Example  \n","Let us assume the following comma separated input sequence is given to the  program:  \n","100,150,180  \n","The output of the program should be:  \n","18,22,24  "],"metadata":{"id":"_dubvL3t5k7s"}},{"source":["import math\n","\n","def calculate_values(c_values):\n","    A = 50\n","    B = 30  # Fixed: Indentation corrected to align with A = 50\n","    results = [int(math.sqrt((2 * A * B) / int(c))) for c in c_values]\n","    return \",\".join(map(str, results))\n","\n","# Input\n","input_values = input(\"Enter comma-separated values of C: \").split(\",\")\n","print(calculate_values(input_values))"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qSY8DH-YHVq_","executionInfo":{"status":"ok","timestamp":1735118773042,"user_tz":-300,"elapsed":32244,"user":{"displayName":"Mr Haris Freelancer","userId":"14924098609705501068"}},"outputId":"1f9e55d0-a482-4cd6-e15a-a97a85ac98a1"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter comma-separated values of C: 100,150,180\n","5,4,4\n"]}]},{"cell_type":"markdown","source":["\n","Task3: You need to write a function that takes a comma separated sequence of words as  input and prints the words in a comma-separated sequence after sorting them  alphabetically.  \n","Suppose the following input is supplied to the program:  \n","without,hello,bag,world  \n","Then, the output should be:  \n","bag,hello,without,world  "],"metadata":{"id":"6JKyFctS6F_i"}},{"cell_type":"code","source":["def sort_words(words):\n","    word_list = words.split(\",\")\n","    sorted_words = sorted(word_list)\n","    return \",\".join(sorted_words)\n","\n","# Input\n","input_words = input(\"Enter a comma-separated sequence of words: \")\n","print(sort_words(input_words))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9V1hpgeY_C40","executionInfo":{"status":"ok","timestamp":1735118927731,"user_tz":-300,"elapsed":135322,"user":{"displayName":"Mr Haris Freelancer","userId":"14924098609705501068"}},"outputId":"97658c2f-2353-4cd5-fc4f-916f12229f8c"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a comma-separated sequence of words: without,hello,bag,world\n","bag,hello,without,world\n"]}]},{"cell_type":"markdown","source":["Task4: You need to write a program that takes sequence of lines as input and prints the  lines after making all characters in the sentence capitalized.  \n","Suppose the following input is supplied to the program:  \n","Hello world  \n","Practice makes perfect  \n","Then, the output should be:\n","HELLO WORLD  \n","PRACTICE MAKES PERFECT  \n"],"metadata":{"id":"YM6VIWKt6iJ4"}},{"source":["def capitalize_lines():\n","    lines = []\n","    while True:\n","        line = input(\"Enter a line (or leave blank to stop): \")\n","        if not line:\n","            break\n","        lines.append(line.upper())\n","    return \"\\n\".join(lines)\n","\n","# Output\n","print(capitalize_lines())"],"cell_type":"code","metadata":{"id":"Rtz9de2wKl6J"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Task5: You need to write a function that counts the number of vowels in a given\n","sentence as input from console.\n","Suppose the following input is supplied to the program:\n","Hello world\n","Practice makes perfect\n","Then, the output should be:\n","a appeared 2 times\n","e appeared 5 times\n","i appeared 1 time\n","o appeared 2 times\n","u appeared 0 time\n","PRACTICE MAKES PERFECT"],"metadata":{"id":"sh1obK3aORAA"}},{"cell_type":"code","source":["def count_vowels(sentence):\n","    vowels = \"aeiou\"\n","    counts = {v: sentence.lower().count(v) for v in vowels}\n","    for vowel, count in counts.items():\n","        print(f\"{vowel} appeared {count} times\")\n","\n","# Input\n","input_sentence = input(\"Enter a sentence: \")\n","count_vowels(input_sentence)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CIGhhDPHOmJL","executionInfo":{"status":"ok","timestamp":1735120847413,"user_tz":-300,"elapsed":32662,"user":{"displayName":"Mr Haris Freelancer","userId":"14924098609705501068"}},"outputId":"f6f4ab1d-2c4c-4497-f56c-2307d88c7baa"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a sentence: PRACTICE MAKES PERFECT\n","a appeared 2 times\n","e appeared 4 times\n","i appeared 1 times\n","o appeared 0 times\n","u appeared 0 times\n"]}]},{"cell_type":"markdown","source":["Task6: You need write a function that traces and makes a list of all such numbers  from1000 to 3000 in which all the digits are even numbers.  \n"],"metadata":{"id":"DfgZciNq7r0O"}},{"source":["def even_digit_numbers():\n","    results = [str(num) for num in range(1000, 3001) if all(int(d) % 2 == 0 for d in str(num))]\n","    return \",\".join(results)\n","\n","# Output\n","print(even_digit_numbers()) # This line was also indented, and should not be.\n"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mqUsEb3nRKAX","executionInfo":{"status":"ok","timestamp":1735120981496,"user_tz":-300,"elapsed":569,"user":{"displayName":"Mr Haris Freelancer","userId":"14924098609705501068"}},"outputId":"4661c84a-66d1-45f3-d247-6d686729d4de"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["2000,2002,2004,2006,2008,2020,2022,2024,2026,2028,2040,2042,2044,2046,2048,2060,2062,2064,2066,2068,2080,2082,2084,2086,2088,2200,2202,2204,2206,2208,2220,2222,2224,2226,2228,2240,2242,2244,2246,2248,2260,2262,2264,2266,2268,2280,2282,2284,2286,2288,2400,2402,2404,2406,2408,2420,2422,2424,2426,2428,2440,2442,2444,2446,2448,2460,2462,2464,2466,2468,2480,2482,2484,2486,2488,2600,2602,2604,2606,2608,2620,2622,2624,2626,2628,2640,2642,2644,2646,2648,2660,2662,2664,2666,2668,2680,2682,2684,2686,2688,2800,2802,2804,2806,2808,2820,2822,2824,2826,2828,2840,2842,2844,2846,2848,2860,2862,2864,2866,2868,2880,2882,2884,2886,2888\n"]}]},{"cell_type":"markdown","source":["Task7: You need to write a code which accepts a sequence of comma separated 4 digit  binary numbers as its input and then check whether they are divisible by 5 or not.  The numbers that are divisible by 5 are to be printed in a comma separated  sequence.  \n","Example:  \n","0100,0011,1010,1001  \n","Then the output should be:  \n","1010  \n","Reference: https://www.datacamp.com/.../python-data-type-conversion\n"],"metadata":{"id":"NRJukOXx71wp"}},{"source":["def binary_divisible_by_5(binaries):\n","    results = [binary for binary in binaries if int(binary, 2) % 5 == 0]\n","    return \",\".join(results) # Corrected: Indentation level adjusted to align with function definition\n","\n","    # Input\n","input_binaries = input(\"Enter comma-separated binary numbers: \").split(\",\") # Corrected: Indentation level adjusted to be outside the function\n","print(binary_divisible_by_5(input_binaries))"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6ObHeIuqRpoG","executionInfo":{"status":"ok","timestamp":1735121279320,"user_tz":-300,"elapsed":12681,"user":{"displayName":"Mr Haris Freelancer","userId":"14924098609705501068"}},"outputId":"3267426d-71d5-400b-bf39-674e4573982d"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter comma-separated binary numbers: 1010\n","1010\n"]}]},{"cell_type":"markdown","source":["\n","Task8: Write a program that accepts a sentence and calculate the number of letters and  digits.  \n","Suppose the following input is supplied to the program:  \n","hello world! 123  \n","Then, the output should be:  \n","LETTERS 10  \n","DIGITS 3\n","\n"],"metadata":{"id":"d0lvGswh8GIz"}},{"cell_type":"code","source":["def count_letters_digits(sentence):\n","    letters = sum(c.isalpha() for c in sentence)\n","    digits = sum(c.isdigit() for c in sentence)\n","    print(f\"LETTERS {letters}\")\n","    print(f\"DIGITS {digits}\")\n","\n","# Input\n","input_sentence = input(\"Enter a sentence: \")\n","count_letters_digits(input_sentence)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PY9bNibk8OGL","executionInfo":{"status":"ok","timestamp":1735121357129,"user_tz":-300,"elapsed":57522,"user":{"displayName":"Mr Haris Freelancer","userId":"14924098609705501068"}},"outputId":"7d91b396-bcf5-43cf-99bc-7b69544b71fc"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a sentence: hello world! 123\n","LETTERS 10\n","DIGITS 3\n"]}]}]}